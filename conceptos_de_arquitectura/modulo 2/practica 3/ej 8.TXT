.data
CONTROL: .word32 0x10000
DATA: .word32 0x10008
color_pelota:	.word32 0x00FF0000 ; Azul
		.word32 0x001400FF ; Rojo
		.word32 0x00FF00FF ; Magenta
		.word32 0x0000FF00 ; Verde
		.word32 0x00000000 ; Negro
coordenadas:	.word 23, 1, 27, 8, 40, 11, 32, 19, 10, 2
direcciones:	.word 1,1,1,1,1,1,1,1,1,1
color_fondo: .word32 0x00FFFFFF ; Blanco

.text
 lwu $s6, CONTROL($0)
 lwu $s7, DATA($0)
 lwu $v0, color_pelota($0)
 lwu $v1, color_fondo($0)
 daddi $s1, $0, 0

 daddi $s2, $0, 1 ; Dirección X de la pelota
 daddi $s3, $0, 1 ; Dirección Y de la pelota
 daddi $s4, $0, 5 ; Comando para dibujar un punto
loop:  ld $t2, coordenadas($s1)
 ld $t4, direcciones($s1)
 daddi $s1, $s1, 8
 ld $t3, coordenadas($s1)
 ld $t5, direcciones($s1)
 daddi $s1, $s1, -8
 sw $v1, 0($s7) ; Borra la pelota
 sb $t2, 4($s7)
 sb $t3, 5($s7)
 sd $s4, 0($s6)

 daddi $t1, $0, 48 ; Comprueba que la pelota no esté en la columna de más
 slt $t0, $t1, $t2 ; a la derecha. Si es así, cambia la dirección en X.
 dsll $t0, $t0, 1
 dsub $t4, $t4, $t0
 slt $t0, $t1, $t3 ; Comprueba que la pelota no esté en la fila de más arriba.
 dsll $t0, $t0, 1 ; Si es así, cambia la dirección en Y.
 dsub $t5, $t5, $t0

 slti $t0, $t2, 1 ; Comprueba que la pelota no esté en la columna de más
 dsll $t0, $t0, 1 ; a la izquierda. Si es así, cambia la dirección en X.
 dadd $t4, $t4, $t0
 slti $t0, $t3, 1 ; Comprueba que la pelota no esté en la fila de más abajo.
 dsll $t0, $t0, 1 ; Si es así, cambia la dirección en Y.
 dadd $t5, $t5, $t0

 dadd $t2, $t2, $t4 ; Mueve la pelota en la dirección actual
 dadd $t3, $t3, $t5
 lw $t1, color_pelota($s1)
 sd $t2, coordenadas($s1)
 sd $t4, direcciones($s1)
 daddi $s1, $s1, 8
 sd $t3, coordenadas($s1)
 sd $t5, direcciones($s1)
 daddi $s1, $s1, 8
 sw $t1, 0($s7) ; Imprimir la pelota actual
 sb $t2, 4($s7)
 sb $t3, 5($s7)
 sd $s4, 0($s6)
 daddi $t2, $0, 80
 bne $s1, $t2, loop

 daddi $s1, $0, 0

 daddi $t0, $0, 500 ; Hace una demora para que el rebote no sea tan rápido.
demora: daddi $t0, $t0, -1 ; Esto genera una infinidad de RAW y BTS pero...
 bnez $t0, demora ; ¡hay que hacer tiempo igualmente!
 j loop